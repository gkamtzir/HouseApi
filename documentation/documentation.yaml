swagger: "2.0"
info:
  description: "This is the documentation of the backend codebase I developed for the 3rd deliverable of a 3 part exercice for the course of Databases. This course is part of the Electrical Engineering and Computer Engineering undergraduate program at Aristotle University of Thessaloniki."
  version: "1.0.0"
  title: "HouseAPI"
  contact:
    email: "georgekam96@gmail.com"
host: "83.212.115.201"
basePath: "/api"
schemes:
- "http"
paths:
  /Property:
    get:
      summary: "Returns every property"
      description: "It returns every property registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/PropertyResponse"
        500:
          description: "Unexpected error"
  /User:
    get:
      summary: "Returns every user"
      description: "It returns every user registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/UserResponse"
        500:
          description: "Unexpected error"
  /PropertySupervisor:
    get:
      summary: "Returns supervisor"
      description: "It returns every supervisor registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/PropertySupervisorResponse"
        500:
          description: "Unexpected error"
  /HeatingType:
    get:
      summary: "Returns all the available heating types"
      description: "It returns every heating type registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/HeatingTypeResponse"
        500:
          description: "Unexpected error"
  /DoorFrameType:
    get:
      summary: "Returns all the available door frame types"
      description: "It returns every door frame type registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/DoorFrameTypeResponse"
        500:
          description: "Unexpected error"
  /City:
    get:
      summary: "Returns all the available cities"
      description: "It returns every city registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/CityResponse"
        500:
          description: "Unexpected error"
  /Visit:
    get:
      summary: "Returns all the visits"
      description: "It returns every visit registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/VisitResponse"
        500:
          description: "Unexpected error"
  /Comment:
    get:
      summary: "Returns all the comments"
      description: "It returns every comment registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/CommentResponse"
        500:
          description: "Unexpected error"
  /Favorite:
    get:
      summary: "Returns all the 'favorite' entries"
      description: "It returns every 'favorite' entry registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/FavoriteResponse"
        500:
          description: "Unexpected error"
  /PropertyAction:
    get:
      summary: "Returns all the property actions"
      description: "It returns every property action registered in HouseDB"
      produces: 
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/PropertyActionResponse"
        500:
          description: "Unexpected error"
  /SupervisorComments/{supervisor_id}:
    get:
      summary: "Returns all the comments a supervisor has received"
      description: "It returns every comment a registered supervisor has received in HouseDB"
      produces: 
      - "application/json"
      parameters:
        - in: path
          name: "supervisor_id"
          type: "integer"
          required: true
          description: "Supervisor's id"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/SupervisorCommentsResponse"
        500:
          description: "Unexpected error"
  /UserFavorite/{user_id}:
    get:
      summary: "Returns all the properties a user has saved as favorite"
      description: "It returns every property a user has saved as favorite in HouseDB"
      produces: 
      - "application/json"
      parameters:
        - in: path
          name: "user_id"
          type: "integer"
          required: true
          description: "User's id"
      responses:
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/PropertyResponse"
        500:
          description: "Unexpected error"
  /Login:
    post:
      summary: "Logs user or property supervisor in"
      description: "It logs in every registered user or supervisor"
      consumes:
        - application/json
      parameters:
        - in: body
          name: "Email"
          description: "A JSON object containing the email"
          schema:
            $ref: "#/definitions/LoginRequestBody"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/LoginResponse"
  /Search:
    post:
      summary: "Returns properties that match the given filters"
      description: "It returns every property registered in HouseDB that matches the given filters"
      consumes:
        - application/json
      parameters:
        - in: body
          name: "Filters"
          description: "A JSON object containing the filters"
          schema:
            $ref: "#/definitions/SearchRequestBody"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PropertyWithPriceResponse"
definitions:
  PropertyResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            street_number:
              type: "string"
            heating_type_id:
              type: "number"
              format: "int64"
            city_id:
              type: "number"
              format: "int64"
            door_frame_id:
              type: "number"
              format: "int64"
            supervisor_id:
              type: "number"
              format: "int64"
            property_type:
              type: "string"
            floor:
              type: "number"
              format: "int64"
            latitude:
              type: "number"
              format: "double"
            longitude:
              type: "number"
              format: "double"
            size:
              type: "number"
              format: "int64"
            rooms:
              type: "number"
              format: "int64"
            street_address:
              type: "string"
            postal_code:
              type: "string"
            details:
              type: "string"
            energy_certificate:
              type: "string"
              enum: [A+, A, B, C, D, E, F, G, H]
  UserResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            contact_email:
              type: "string"
            contact_number:
              type: "string"
  PropertySupervisorResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            address:
              type: "string"
            website:
              type: "string"
            contact_name:
              type: "string"
            contact_email:
              type: "string"
            contact_number:
              type: "string"
  HeatingTypeResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            type:
              type: "string"
              enum: [Decentralized, Central, Other]
  DoorFrameTypeResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            screen:
              type: "boolean"
            glass_type:
              type: "string"
              enum: [Single, Double, Triple, Other]
  CityResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            country_name:
              type: "string"
            average_temp:
              type: "number"
              format: "double"
            average_precip:
              type: "number"
              format: "double"
            average_humidity:
              type: "number"
              format: "double"
            population:
              type: "number"
  VisitResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            user_id:
              type: "integer"
              format: "int64"
            property_id:
              type: "integer"
              format: "int64"
            status:
              type: "string"
              enum: [Pending Verification, Scheduled, Canceled, Completed, Failed]
            visit_date:
              type: "string"
  CommentResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            comment:
              type: "string"
            rating:
              type: "number"
              format: "int64"
            user_id:
              type: "integer"
              format: "int64"
            supervisor_id:
              type: "integer"
              format: "int64"
  FavoriteResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            user_id:
              type: "integer"
              format: "int64"
            property_id:
              type: "integer"
              format: "int64"
  PropertyActionResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            property_id:
              type: "integer"
              format: "int64"
            action:
              type: "string"
              enum: [Sale, Rent]
            price:
              type: "number"
              format: "int64"
  SearchRequestBody:
    type: "object"
    properties:
      action:
        type: "string"
      city:
        type: "string"
      max_size:
        type: "integer"
        format: "int64"
      min_size:
        type: "integer"
        format: "int64"
      max_price:
        type: "integer"
        format: "int64"
      min_price:
        type: "integer"
        format: "int64"
      max_floor:
        type: "integer"
        format: "int64"
      min_floor:
        type: "integer"
        format: "int64"
      max_rooms:
        type: "integer"
        format: "int64"
      min_rooms:
        type: "integer"
        format: "int64"
    required:
      - action
  PropertyWithPriceResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            street_number:
              type: "string"
            heating_type_id:
              type: "number"
              format: "int64"
            city_id:
              type: "number"
              format: "int64"
            door_frame_id:
              type: "number"
              format: "int64"
            supervisor_id:
              type: "number"
              format: "int64"
            property_type:
              type: "string"
            floor:
              type: "number"
              format: "int64"
            latitude:
              type: "number"
              format: "double"
            longitude:
              type: "number"
              format: "double"
            size:
              type: "number"
              format: "int64"
            rooms:
              type: "number"
              format: "int64"
            street_address:
              type: "string"
            postal_code:
              type: "string"
            details:
              type: "string"
            energy_certificate:
              type: "string"
              enum: [A+, A, B, C, D, E, F, G, H]
            price:
              type: "integer"
              format: "int64"
  LoginRequestBody:
    type: "object"
    properties:
      email:
        type: "string"
  LoginResponse:
    type: "object"
    properties:
      status:
        type: "string"
      token:
        type: "string"
  SupervisorCommentsResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            comment:
              type: "string"
            rating:
              type: "number"
              format: "int64"
            user_id:
              type: "integer"
              format: "int64"
            supervisor_id:
              type: "integer"
              format: "int64"
            user_name:
              type: "string"
externalDocs:
  description: "Find out more about HouseAPI"
  url: "https://github.com/gkamtzir/HouseApi"